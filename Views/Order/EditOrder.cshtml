@model Agromarket.Models.Order

@{
    ViewData["Title"] = "Редагування замовлення";
}

<h2>Редагування замовлення #@Model.Id</h2>

<form asp-action="EditOrder" method="post" onsubmit="updateIndexes()">
    <input type="hidden" asp-for="Id" />

    <div class="mb-3">
        <label asp-for="CustomerName" class="form-label">Ім'я клієнта</label>
        <input asp-for="CustomerName" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="CustomerEmail" class="form-label">Email</label>
        <input asp-for="CustomerEmail" class="form-control" type="email" required />
    </div>

    <div class="mb-3">
        <label asp-for="CustomerPhone" class="form-label">Телефон</label>
        <input asp-for="CustomerPhone" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="DeliveryAddress" class="form-label">Адреса доставки</label>
        <input asp-for="DeliveryAddress" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="OrderDate" class="form-label">Дата замовлення</label>
        <input asp-for="OrderDate" class="form-control" type="date" required />
    </div>

    <div class="mb-3">
        <label asp-for="Status" class="form-label">Статус</label>
        <select asp-for="Status" class="form-select">
            <option value="Виконується">Виконується</option>
            <option value="Виконано">Виконано</option>
            <option value="Скасовано">Скасовано</option>
        </select>
    </div>

    <h3>📦 Товари у замовленні</h3>
    <table class="table">
        <thead>
        <tr>
            <th>Назва</th>
            <th>Ціна (₴)</th>
            <th>Кількість</th>
            <th>Одиниця</th>
            <th>Дії</th>
        </tr>
        </thead>
        <tbody id="order-items">
        @for (int i = 0; i < Model.OrderItems.Count; i++)
        {
            <tr>
                <td>@Model.OrderItems[i].ProductName</td>
                <td>@Model.OrderItems[i].Price.ToString("0.00") ₴</td>
                <td>
                    <input type="number" name="OrderItems[@i].Quantity" class="form-control quantity-input"
                           value="@Model.OrderItems[i].Quantity" min="1"
                           data-price="@Model.OrderItems[i].Price"
                           onchange="updateTotalAmount()" />
                    <input type="hidden" name="OrderItems[@i].ProductId" value="@Model.OrderItems[i].ProductId" />
                    <input type="hidden" name="OrderItems[@i].ProductName" value="@Model.OrderItems[i].ProductName" />
                    <input type="hidden" name="OrderItems[@i].Price" value="@Model.OrderItems[i].Price" />
                    <input type="hidden" name="OrderItems[@i].Unit" value="@Model.OrderItems[i].Unit" />
                </td>
                <td>@Model.OrderItems[i].Unit</td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeItem(this)">🗑️ Видалити</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="mb-3">
        <label for="productSelect" class="form-label">Додати товар:</label>
        <select id="productSelect" class="form-select">
            <option value="">-- Виберіть товар --</option>
            @foreach (var product in ViewBag.Products)
            {
                <option value="@product.Id" data-name="@product.Name" data-price="@product.SellingPrice" data-unit="@product.Unit">
                    @product.Name (@product.SellingPrice?.ToString("0.00") ₴)
                </option>
            }
        </select>
        <button type="button" class="btn btn-primary mt-2" onclick="addProduct()">➕ Додати</button>
    </div>

    <button type="submit" class="btn btn-success">💾 Зберегти</button>
</form>

<script>
    function updateTotalAmount() {
        let total = 0;
        document.querySelectorAll('.quantity-input').forEach(input => {
            let price = parseFloat(input.dataset.price);
            let quantity = parseInt(input.value);
            total += price * quantity;
        });
    }

    function removeItem(button) {
        button.closest("tr").remove();
        updateTotalAmount();
    }

    function addProduct() {
        let select = document.getElementById("productSelect");
        let selectedOption = select.options[select.selectedIndex];

        if (!selectedOption.value) return;

        let productId = selectedOption.value;
        let productName = selectedOption.dataset.name;
        let productPrice = parseFloat(selectedOption.dataset.price);
        let productUnit = selectedOption.dataset.unit;

        let tableBody = document.getElementById("order-items");

        let newRow = `
            <tr>
                <td>${productName}</td>
                <td>${productPrice.toFixed(2)} ₴</td>
                <td>
                    <input type="number" name="OrderItems[][Quantity]" class="form-control quantity-input"
                           value="1" min="1" data-price="${productPrice}"
                           onchange="updateTotalAmount()" />
                    <input type="hidden" name="OrderItems[][ProductId]" value="${productId}" />
                    <input type="hidden" name="OrderItems[][ProductName]" value="${productName}" />
                    <input type="hidden" name="OrderItems[][Price]" value="${productPrice}" />
                    <input type="hidden" name="OrderItems[][Unit]" value="${productUnit}" />
                </td>
                <td>${productUnit}</td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeItem(this)">🗑️ Видалити</button>
                </td>
            </tr>`;

        tableBody.insertAdjacentHTML("beforeend", newRow);
        updateTotalAmount();
    }
</script>
