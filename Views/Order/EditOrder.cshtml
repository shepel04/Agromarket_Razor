@model Agromarket.Models.Order

@{
    ViewData["Title"] = $"Редагування замовлення #{Model.Id}";
    var entries = ViewBag.Entries as List<Agromarket.Models.WarehouseEntry>;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="EditOrder" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="mb-3">
        <label asp-for="CustomerName" class="form-label">Ім'я клієнта</label>
        <input asp-for="CustomerName" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="CustomerEmail" class="form-label">Email</label>
        <input asp-for="CustomerEmail" class="form-control" type="email" required />
    </div>

    <div class="mb-3">
        <label asp-for="CustomerPhone" class="form-label">Телефон</label>
        <input asp-for="CustomerPhone" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="DeliveryAddress" class="form-label">Адреса доставки</label>
        <input asp-for="DeliveryAddress" class="form-control" required />
    </div>

    <div class="mb-3">
        <label asp-for="OrderDate" class="form-label">Дата замовлення</label>
        <input asp-for="OrderDate" class="form-control" type="date" required />
    </div>

    <div class="mb-3">
        <label asp-for="Status" class="form-label">Статус</label>
        <select asp-for="Status" class="form-select">
            @foreach (var status in Enum.GetValues(typeof(Agromarket.Models.OrderStatus)))
            {
                <option value="@status">@status</option>
            }
        </select>
    </div>

    <h4 class="mt-4">📦 Товари у замовленні</h4>

    <table class="table" id="order-items-table">
        <thead>
        <tr>
            <th>Назва</th>
            <th>Ціна</th>
            <th>Кількість</th>
            <th>Одиниця</th>
            <th>Дії</th>
        </tr>
        </thead>
        <tbody id="order-items">
        @for (int i = 0; i < Model.OrderItems.Count; i++)
        {
            var item = Model.OrderItems[i];
            <tr>
                <td>@item.ProductName</td>
                <td>@item.Price.ToString("0.00") ₴</td>
                <td>
                    <input type="number" name="OrderItems[@i].Quantity" value="@item.Quantity"
                           class="form-control quantity-input" min="1" data-price="@item.Price" onchange="updateTotalAmount()" />
                    <input type="hidden" name="OrderItems[@i].ProductId" value="@item.ProductId" />
                    <input type="hidden" name="OrderItems[@i].ProductName" value="@item.ProductName" />
                    <input type="hidden" name="OrderItems[@i].Price" value="@item.Price" />
                    <input type="hidden" name="OrderItems[@i].Unit" value="@item.Unit" />
                </td>
                <td>@item.Unit</td>
                <td>
                    <button type="button" class="btn btn-sm btn-danger" onclick="removeItem(this)">🗑️ Видалити</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="mb-3">
        <label class="form-label">Додати товар:</label>
        <select id="entrySelect" class="form-select">
            <option value="">-- Виберіть товар --</option>
            @foreach (var entry in entries)
            {
                var product = entry.Product;
                <option value="@entry.ProductId" data-name="@product.Name" data-price="@entry.SellingPrice" data-unit="@product.Unit">
                    @product.Name (@entry.SellingPrice?.ToString("0.00") ₴)
                </option>
            }
        </select>
        <button type="button" class="btn btn-primary mt-2" onclick="addProduct()">➕ Додати</button>
    </div>

    <button type="submit" class="btn btn-success">💾 Зберегти</button>
</form>

<script>
    function updateTotalAmount() {
        let total = 0;
        document.querySelectorAll('.quantity-input').forEach(input => {
            let price = parseFloat(input.dataset.price);
            let quantity = parseInt(input.value);
            total += price * quantity;
        });
    }

    function removeItem(button) {
        button.closest('tr').remove();
    }

    function addProduct() {
        let select = document.getElementById('entrySelect');
        let option = select.options[select.selectedIndex];
        if (!option.value) return;

        let index = document.querySelectorAll('#order-items tr').length;

        let row = `
        <tr>
            <td>${option.dataset.name}</td>
            <td>${parseFloat(option.dataset.price).toFixed(2)} ₴</td>
            <td>
                <input type="number" name="OrderItems[${index}].Quantity" value="1"
                       class="form-control quantity-input" min="1" data-price="${option.dataset.price}" onchange="updateTotalAmount()" />
                <input type="hidden" name="OrderItems[${index}].ProductId" value="${option.value}" />
                <input type="hidden" name="OrderItems[${index}].ProductName" value="${option.dataset.name}" />
                <input type="hidden" name="OrderItems[${index}].Price" value="${option.dataset.price}" />
                <input type="hidden" name="OrderItems[${index}].Unit" value="${option.dataset.unit}" />
            </td>
            <td>${option.dataset.unit}</td>
            <td><button type="button" class="btn btn-sm btn-danger" onclick="removeItem(this)">🗑️</button></td>
        </tr>`;

        document.getElementById('order-items').insertAdjacentHTML('beforeend', row);
    }
</script>
