@model IEnumerable<Agromarket.Models.Order>
@{
    ViewData["Title"] = "Список замовлень";
    var ordersByStatus = Model.GroupBy(o => o.Status).ToDictionary(g => g.Key, g => g.ToList());
}

<h2 class="mb-4">Список замовлень</h2>

@if (TempData["StockError"] != null)
{
    <div class="alert alert-danger">
        @Html.Raw(TempData["StockError"])
    </div>
}

<!-- Вкладки -->
<ul class="nav nav-tabs mb-3" id="orderStatusTabs" role="tablist">
    @foreach (var status in Enum.GetValues(typeof(Agromarket.Models.OrderStatus)).Cast<Agromarket.Models.OrderStatus>())
    {
        var isActive = status == OrderStatus.Виконується ? "active" : "";
        <li class="nav-item" role="presentation">
            <button class="nav-link @isActive" id="tab-@status" data-bs-toggle="tab" data-bs-target="#panel-@status" type="button" role="tab">
                @status
            </button>
        </li>
    }
</ul>

<!-- Контент вкладок -->
<div class="tab-content">
    @foreach (var status in Enum.GetValues(typeof(Agromarket.Models.OrderStatus)).Cast<Agromarket.Models.OrderStatus>())
    {
        var isActive = status == OrderStatus.Виконується ? "show active" : "";
        var orders = ordersByStatus.ContainsKey(status) ? ordersByStatus[status] : new List<Agromarket.Models.Order>();

        <div class="tab-pane fade @isActive" id="panel-@status" role="tabpanel">
            @if (!orders.Any())
            {
                <div class="alert alert-info">Немає замовлень зі статусом <strong>@status</strong>.</div>
            }
            else
            {
                <table class="table table-bordered table-striped align-middle">
                    <thead>
                    <tr>
                        <th>№</th>
                        <th>Клієнт</th>
                        <th>Email</th>
                        <th>Телефон</th>
                        <th>Сума</th>
                        <th>Дата</th>
                        <th>Статус</th>
                        <th>Дії</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var order in orders)
                    {
                        <tr id="order-@order.Id">
                            <td>@order.Id</td>
                            <td>@order.CustomerName</td>
                            <td>@order.CustomerEmail</td>
                            <td>@order.CustomerPhone</td>
                            <td>@order.TotalAmount.ToString("0") ₴</td>
                            <td>@order.OrderDate.ToShortDateString()</td>
                            <td>
                                <form asp-action="UpdateStatus" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@order.Id" />
                                    <select name="newStatus" class="form-select form-select-sm d-inline-block" style="width: auto;">
                                        @foreach (var s in Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>())
                                        {
                                            <option value="@s" selected="@(order.Status == s ? "selected" : null)">@s</option>
                                        }
                                    </select>
                                    <button type="submit" class="btn btn-primary btn-sm">Змінити</button>
                                </form>
                            </td>
                            <td>
                                <a asp-action="EditOrder" asp-route-id="@order.Id" class="btn btn-warning btn-sm">✏️ Редагувати</a>
                                <button class="btn btn-info btn-sm" onclick="toggleOrderDetails(@order.Id)">📜 Деталі</button>
                                <button onclick="deleteOrder(@order.Id)" class="btn btn-danger btn-sm">🗑️</button>
                            </td>
                        </tr>
                        <tr id="order-details-@order.Id" class="d-none">
                            <td colspan="8">
                                <div id="details-content-@order.Id" class="border p-3 rounded bg-light">
                                    <p><strong>Завантаження...</strong></p>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        async function toggleOrderDetails(orderId) {
            const row = document.getElementById(`order-details-${orderId}`);
            const content = document.getElementById(`details-content-${orderId}`);

            if (!row.classList.contains("d-none")) {
                row.classList.add("d-none");
                return;
            }

            row.classList.remove("d-none");

            try {
                const response = await fetch(`/Order/GetOrderDetails/${orderId}`);
                if (response.ok) {
                    const data = await response.text();
                    content.innerHTML = data;
                } else {
                    content.innerHTML = "<p class='text-danger'>Помилка завантаження деталей.</p>";
                }
            } catch (error) {
                console.error("Помилка:", error);
                content.innerHTML = "<p class='text-danger'>Не вдалося отримати дані.</p>";
            }
        }

        async function deleteOrder(orderId) {
            if (!confirm("Ви впевнені, що хочете видалити це замовлення?")) return;

            try {
                const response = await fetch(`/Order/DeleteOrder/${orderId}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                });

                if (response.ok) {
                    document.getElementById(`order-${orderId}`).remove();
                } else {
                    alert("Не вдалося видалити замовлення.");
                }
            } catch (error) {
                console.error("Помилка при видаленні:", error);
            }
        }
    </script>
}
