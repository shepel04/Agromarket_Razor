@model List<Agromarket.Models.CartItem>

@{
    ViewData["Title"] = "Кошик";
}

<div class="container">
    <h2 class="text-center mb-4">🛒 Ваш кошик</h2>

    @if (TempData["StockError"] != null)
    {
        <div class="alert alert-danger text-center">
            @TempData["StockError"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center">
            <p class="text-muted">Ваш кошик порожній.</p>
            <a href="/" class="btn btn-primary">Перейти до покупок</a>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                <tr>
                    <th>Фото</th>
                    <th>Назва</th>
                    <th>Ціна</th>
                    <th>Кількість</th>
                    <th>Одиниця</th>
                    <th>Всього</th>
                    <th>Дії</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr id="cart-item-@item.EntryId" data-entry-id="@item.EntryId">
                    <td>
                            <img src="data:image/png;base64,@item.ImageBase64" class="rounded" style="width: 60px; height: auto;" />
                        </td>
                        <td>
                            <div>
                                @item.Name
                                @if (item.IsPreorder)
                                {
                                    <span class="badge bg-warning text-dark ms-2">Передзамовлення</span>
                                    @if (item.PreorderDate != null)
                                    {
                                        <div class="text-muted small">Очікувана дата: @item.PreorderDate?.ToString("dd.MM.yyyy")</div>
                                    }
                                }
                            </div>
                        </td>

                        <td class="price">@item.Price.ToString("0.00") грн</td>
                        <td>
                            <input type="number"
                                   class="form-control text-center"
                                   style="width: 80px;"
                                   value="@item.Quantity"
                                   min="1"
                                   @(item.IsPreorder ? "" : $"max=\"{item.MaxQuantity}\"")
                                   onchange="validateQuantity(this, @(item.MaxQuantity), @item.EntryId, @(item.IsPreorder.ToString().ToLower()))" />



                        </td>
                        <td>@item.Unit</td>
                        <td class="total-item-price fw-bold">@((item.Price * item.Quantity).ToString("0.00")) грн</td>
                        <td>
                            <button onclick="removeFromCart(@item.EntryId)" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>

                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-4">
            <h4 class="text-primary">Загальна сума: <span id="totalPrice" class="fw-bold">@Model.Sum(p => p.Price * p.Quantity).ToString("0.00") грн</span></h4>
            <div>
                <a href="@Url.Action("ClearCart", "Cart")" class="btn btn-warning">Очистити кошик</a>
                <a href="@Url.Action("Checkout", "Order")" class="btn btn-success">Оформити замовлення</a>
            </div>
        </div>
    }
</div>

<!-- Повідомлення про помилку залишків -->
<div id="stockErrorMessage" class="alert alert-danger d-none mt-3 text-center"></div>

<!-- Модальне вікно для повідомлення про нестачу товарів -->
<div class="modal fade" id="stockErrorModal" tabindex="-1" aria-labelledby="stockErrorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="stockErrorModalLabel">❌ Помилка залишків</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрити"></button>
            </div>
            <div class="modal-body" id="stockErrorModalMessage">
                <!-- Сюди вставлятиметься повідомлення про відсутність товару -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрити</button>
            </div>
        </div>
    </div>
</div>

<script>
    async function checkStockBeforeCheckout() {
        try {
            let response = await fetch('/Cart/CheckStockBeforeCheckout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            });

            let data = await response.json();
            if (data.success) {
                window.location.href = data.redirectUrl;
            } else {
                let errorMessage = "Недостатньо залишків для наступних товарів:<ul>";
                data.insufficientStock.forEach(item => {
                    errorMessage += `<li><strong>${item.name}</strong> (доступно: ${item.available}, потрібно: ${item.requested})</li>`;
                });
                errorMessage += "</ul>";

                document.getElementById("stockErrorModalMessage").innerHTML = errorMessage;
                let stockErrorModal = new bootstrap.Modal(document.getElementById("stockErrorModal"));
                stockErrorModal.show();
            }
        } catch (error) {
            console.error("Помилка перевірки залишків:", error);
        }
    }

    async function updateQuantity(entryId, quantity) {
        if (quantity < 1) {
            removeFromCart(entryId);
            return;
        }

        try {
            let response = await fetch('/Cart/UpdateQuantityAjax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `entryId=${entryId}&quantity=${quantity}`
            });

            if (response.ok) {
                let data = await response.json();
                if (data.success) {
                    document.querySelector(`#cart-item-${entryId} .total-item-price`).textContent =
                        data.totalItemPrice.toFixed(2) + " грн";
                    document.getElementById("totalPrice").textContent = data.totalPrice.toFixed(2) + " грн";
                } else {
                    alert(data.message);
                }
            }
        } catch (error) {
            console.error("Помилка оновлення кількості:", error);
        }
    }

    async function removeFromCart(entryId) {
        try {
            let response = await fetch('/Cart/RemoveFromCartAjax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `entryId=${entryId}`
            });

            if (response.ok) {
                let data = await response.json();
                if (data.success) {
                    document.getElementById(`cart-item-${entryId}`).remove();
                    document.getElementById("totalPrice").textContent = data.totalPrice.toFixed(2) + " грн";

                    if (document.querySelectorAll("tbody tr").length === 0) {
                        location.reload();
                    }
                }
            }
        } catch (error) {
            console.error("Помилка видалення товару:", error);
        }
    }

    function validateQuantity(input, max, entryId, isPreorder = false) {
        let value = parseInt(input.value);
        if (!isPreorder && value > max) {
            alert(`Максимальна кількість для цього товару: ${max}`);
            input.value = max;
            value = max;
        }
        if (value < 1 || isNaN(value)) {
            input.value = 1;
            value = 1;
        }
        updateQuantity(entryId, value);
    }


</script>
