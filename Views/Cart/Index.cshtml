@model List<Agromarket.Models.CartItem>

@{
    ViewData["Title"] = "Кошик";
    bool isClient = User.IsInRole("client");
    bool hasBulkWithDeposit = Model.Any(i => i.DepositAmount > 0);

    var regularItems = Model.Where(i => !i.IsPreorder).ToList();
    var preorderItems = Model.Where(i => i.IsPreorder).ToList();

    var totalRegular = regularItems.Sum(i => i.Price * i.Quantity);
    var totalPreorder = preorderItems.Sum(i => i.Price * i.Quantity);
    var totalDeposit = Model.Sum(i => i.DepositAmount);
}

<div class="container my-5">
    <h2 class="text-center mb-4">🛒 Ваш кошик</h2>

    @if (TempData["StockError"] != null)
    {
        <div class="alert alert-danger text-center">@TempData["StockError"]</div>
    }

    @if (isClient && hasBulkWithDeposit)
    {
        <div id="depositInfo" class="alert alert-info text-center">
            <i class="bi bi-info-circle-fill me-2"></i>
            Ви оформили оптове замовлення. Передплата:
            <strong>@totalDeposit.ToString("0.00") грн</strong>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center">
            <p class="text-muted">Ваш кошик порожній.</p>
            <a href="/" class="btn btn-primary">Перейти до покупок</a>
        </div>
    }
    else
    {
        <div class="row g-4">
            <!-- Блок "В наявності" -->
            <div class="col-md-6">
                <h4 class="mb-3 text-success">✅ В наявності</h4>
                @if (!regularItems.Any())
                {
                    <div class="alert alert-secondary">Немає товарів у наявності.</div>
                }
                else
                {
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                        <tr>
                            <th>Товар</th>
                            <th>Кількість</th>
                            <th>Ціна</th>
                            <th>Сума</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in regularItems)
                        {
                            <tr id="cart-item-@item.EntryId">
                                <td>@item.Name</td>
                                <td>
                                    <input type="number" class="form-control form-control-sm text-center"
                                           value="@item.Quantity" min="1" max="@item.MaxQuantity"
                                           onchange="validateQuantity(this, @item.MaxQuantity, @item.EntryId, false)" />
                                </td>
                                <td>@item.Price.ToString("0.00") грн</td>
                                <td class="total-item-price">@((item.Price * item.Quantity).ToString("0.00")) грн</td>
                                <td>
                                    <button onclick="removeFromCart(@item.EntryId)" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    <div class="text-end fw-bold mt-2">
                        Разом: <span class="text-success" id="totalReady">@totalRegular.ToString("0.00") грн</span>
                    </div>
                }
            </div>

            <!-- Блок "Передзамовлення" -->
            <div class="col-md-6">
                <h4 class="mb-3 text-warning">🕓 Передзамовлення</h4>
                @if (!preorderItems.Any())
                {
                    <div class="alert alert-secondary">Немає товарів на передзамовлення.</div>
                }
                else
                {
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                        <tr>
                            <th>Товар</th>
                            <th>Кількість</th>
                            <th>Ціна</th>
                            <th>Сума</th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in preorderItems)
                        {
                            <tr id="cart-item-@item.EntryId">
                                <td>
                                    @item.Name
                                    <div class="small text-muted">Очікується з: @item.PreorderDate?.ToString("dd.MM.yyyy")</div>
                                </td>
                                <td>
                                    <input type="number" class="form-control form-control-sm text-center"
                                           value="@item.Quantity" min="1"
                                           onchange="validateQuantity(this, @item.MaxQuantity, @item.EntryId, true)" />
                                </td>
                                <td>@item.Price.ToString("0.00") грн</td>
                                <td class="total-item-price">@((item.Price * item.Quantity).ToString("0.00")) грн</td>
                                <td>
                                    <button onclick="removeFromCart(@item.EntryId)" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                    <div class="text-end fw-bold mt-2">
                        Разом: <span class="text-warning" id="totalPreorder">@totalPreorder.ToString("0.00") грн</span>
                    </div>
                }
            </div>
        </div>

        <hr class="my-4" />

        <div class="d-flex justify-content-between align-items-center">
            <a href="@Url.Action("ClearCart", "Cart")" class="btn btn-outline-warning">Очистити кошик</a>
            <div class="text-end">
                <div class="fs-5 fw-bold">Загальна сума: <span id="totalPrice">@((totalRegular + totalPreorder).ToString("0.00")) грн</span></div>
                <a href="@Url.Action("Checkout", "Order")" class="btn btn-success mt-2">Оформити замовлення</a>
            </div>
        </div>
    }
</div>

<!-- Модальне вікно для розподілу кількості, якщо введено більше ніж є в наявності -->
<div class="modal fade" id="splitQuantityModal" tabindex="-1" aria-labelledby="splitQuantityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="splitQuantityModalLabel">Підтвердіть дію</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрити"></button>
            </div>
            <div class="modal-body">
                Ви ввели кількість, що перевищує наявний залишок. Будь ласка, оберіть один із варіантів:
                <ul>
                    <li>
                        Замовити <strong id="availableAmountText"></strong> одиниць, які є в наявності, а решту — як передзамовлення.
                    </li>
                    <li>
                        Оформити все як передзамовлення.
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="confirmSplit('split')">Замовити частково</button>
                <button type="button" class="btn btn-warning" onclick="confirmSplit('preorder')">Замовити все як передзамовлення</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Глобальна змінна, щоб зберегти інформацію про зміни
    let pendingUpdate = null; // { entryId, newQuantity, available }

    function validateQuantity(input, max, entryId, isPreorder = false) {
        let value = parseInt(input.value);
        if (isNaN(value) || value < 1) {
            input.value = 1;
            value = 1;
        }
        // Якщо товар НЕ для передзамовлення і введена кількість менша або рівна max, викликаємо оновлення напряму.
        if (!isPreorder && value <= max) {
            updateQuantity(entryId, value, null);
        }
        else if (!isPreorder && value > max) {
            // Якщо товар не для передзамовлення, але значення більше max, відкриваємо модальне вікно з варіантами.
            pendingUpdate = { entryId: entryId, newQuantity: value, available: max, isPreorder: false };
            // Встановлюємо текст кількості, що є в наявності.
            document.getElementById("availableAmountText").textContent = max;
            let modal = new bootstrap.Modal(document.getElementById("splitQuantityModal"));
            modal.show();
        }
        else if (isPreorder) {
            // Для вже передзамовлених товарів допускаємо будь-яке значення.
            updateQuantity(entryId, value, null);
        }
    }

    // Функція, що викликається з модального вікна для підтвердження вибору
    function confirmSplit(mode) {
        if (pendingUpdate) {
            // mode 'split' - розділити кількість: наявне стає available, решта попадає в передзамовлення.
            // mode 'preorder' - все оформити як передзамовлення.
            updateQuantity(pendingUpdate.entryId, pendingUpdate.newQuantity, mode);
            pendingUpdate = null;
            // Закриваємо модальне вікно
            let modalEl = document.getElementById("splitQuantityModal");
            let modal = bootstrap.Modal.getInstance(modalEl);
            if (modal) modal.hide();
        }
    }

    async function updateQuantity(entryId, quantity, mode) {
        try {
            const params = new URLSearchParams();
            params.append('entryId', entryId);
            params.append('quantity', quantity);
            if (mode) {
                params.append('mode', mode);
            }
            const response = await fetch('/Cart/UpdateQuantityAjax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: params.toString()
            });

            if (response.ok) {
                const data = await response.json();
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message);
                }
            } else {
                alert("Помилка оновлення кількості.");
            }
        } catch (error) {
            console.error("Помилка при оновленні кількості:", error);
        }
    }


    async function removeFromCart(entryId) {
        try {
            const response = await fetch('/Cart/RemoveFromCartAjax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `entryId=${entryId}`
            });
            if (response.ok) {
                location.reload();
            }
        } catch (error) {
            console.error("Помилка видалення товару:", error);
        }
    }
</script>
    